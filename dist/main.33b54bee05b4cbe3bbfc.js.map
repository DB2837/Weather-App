{"version":3,"file":"main.33b54bee05b4cbe3bbfc.js","mappings":"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","sources":["webpack://weather-app/./src/UI.js","webpack://weather-app/./src/format-string.js","webpack://weather-app/./src/weather.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/make namespace object","webpack://weather-app/./src/index.js"],"sourcesContent":["const updateDOM = (() => {\n  function setValues(cityData) {\n    if (!cityData) return;\n\n    const card = document.querySelector(\".card\");\n    card.classList.add(\"active\");\n\n    const cityName = document.querySelector(\"#city\");\n    const timezone = document.querySelector(\"#time-zone\");\n    const description = document.querySelector(\"#description\");\n    const temperature = document.querySelector(\"#temperature\");\n    const humidity = document.querySelector(\"#humidity\");\n    const wind = document.querySelector(\"#wind\");\n\n    cityName.textContent = `${cityData.name}, ${cityData.country}`;\n\n    description.textContent = `${cityData.description}`;\n    temperature.textContent = `${cityData.temp} Â°C`;\n    humidity.textContent = `Humidity: ${cityData.humidity} %`;\n    wind.textContent = `Wind: ${cityData.wind} km/h`;\n    if (cityData.timezone >= 0)\n      timezone.textContent = `GMT: + ${cityData.timezone}`;\n    if (cityData.timezone < 0)\n      timezone.textContent = `GMT: ${cityData.timezone}`;\n  }\n\n  return { setValues };\n})();\n\nexport default updateDOM;\n","function formatString(string) {\n  return (\n    string.trim().charAt(0).toUpperCase() + string.trim().slice(1).toLowerCase()\n  );\n}\n\nexport default formatString;\n","import formatString from \"./format-string\";\n\nconst weather = (() => {\n  const getCityCoordinates = async (cityName) => {\n    try {\n      const formattedName = formatString(cityName);\n      const response = await fetch(\n        `http://api.openweathermap.org/geo/1.0/direct?q=${formattedName}&limit=5&appid=c4b936ae0fb7d7f90af87644c836f5b6`,\n        { mode: \"cors\" }\n      );\n\n      const cityData = await response.json();\n\n      const coordinates = {\n        lat: cityData[0].lat,\n        lon: cityData[0].lon,\n      };\n\n      return coordinates;\n    } catch (error) {\n      throw new Error(`\"${cityName}\" not found`);\n    }\n  };\n\n  const getCityWeather = async (name) => {\n    try {\n      const coordinates = await getCityCoordinates(name);\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${coordinates.lat}&lon=${coordinates.lon}&appid=c4b936ae0fb7d7f90af87644c836f5b6&units=metric`,\n        { mode: \"cors\" }\n      );\n\n      const jsonCity = await response.json();\n\n      const cityData = {\n        name: jsonCity.name,\n        country: jsonCity.sys[\"country\"],\n        timezone: jsonCity.timezone / 3600,\n        description: jsonCity.weather[0][\"description\"],\n        temp: jsonCity.main[\"temp\"],\n        humidity: jsonCity.main[\"humidity\"],\n        wind: jsonCity.wind[\"speed\"],\n      };\n\n      return cityData;\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return { getCityWeather };\n})();\n\nexport default weather;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./style.css\";\nimport weather from \"./weather\";\nimport updateDOM from \"./UI\";\n\nconst searchButton = document.querySelector(\"#search-btn\");\nconst input = document.querySelector(\"#search-input\");\n\ninput.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n});\n\nsearchButton.addEventListener(\"click\", async (e) => {\n  e.preventDefault();\n  if (input.value === \"\") return;\n  const data = await weather.getCityWeather(input.value);\n  updateDOM.setValues(data);\n});\n"],"names":["updateDOM","setValues","cityData","card","document","querySelector","classList","add","cityName","timezone","description","temperature","humidity","wind","textContent","name","country","temp","formatString","string","trim","charAt","toUpperCase","slice","toLowerCase","weather","getCityCoordinates","formattedName","response","fetch","mode","json","coordinates","lat","lon","error","Error","getCityWeather","jsonCity","sys","main","alert","message","searchButton","input","addEventListener","e","preventDefault","value","data"],"sourceRoot":""}